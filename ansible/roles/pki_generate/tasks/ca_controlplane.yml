# ---- kube-apiserver serving cert ----
- name: Render apiserver CSR JSON (with full SANs)
  template:
    src: apiserver.json.j2
    dest: "{{ k8s_pki_dir }}/apiserver-csr.json"
    mode: "0644"

- name: Generate kube-apiserver serving cert
  shell: >
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server
    apiserver-csr.json | cfssljson -bare apiserver
  args:
    chdir: "{{ k8s_pki_dir }}"
    creates: "{{ k8s_pki_dir }}/apiserver.pem"
  register: apiserver_result
  failed_when: apiserver_result is failed


# ---- apiserver -> kubelet client cert ----
- name: Render apiserver-kubelet client CSR
  template:
    src: apiserver-kubelet-client.json.j2
    dest: "{{ k8s_pki_dir }}/apiserver-kubelet-client.json"
    mode: "0644"

- name: Generate apiserver-kubelet client cert
  shell: >
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client
    apiserver-kubelet-client.json | cfssljson -bare apiserver-kubelet-client
  args:
    chdir: "{{ k8s_pki_dir }}"
    creates: "{{ k8s_pki_dir }}/apiserver-kubelet-client.pem"
  register: kubelet_client_result
  failed_when: kubelet_client_result is failed


# ---- controller-manager, scheduler, admin client certs ----
- name: Render component client CSRs
  template:
    src: "{{ item.src }}"
    dest: "{{ k8s_pki_dir }}/{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "controller-manager.json.j2", dest: "controller-manager.json" }
    - { src: "scheduler.json.j2",         dest: "scheduler.json" }
    - { src: "admin.json.j2",             dest: "admin.json" }
    - { src: "kube-proxy.json.j2",        dest: "kube-proxy.json" }

- name: Generate component client certs
  shell: >
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client
    {{ item }}.json | cfssljson -bare {{ "kube-" + item if item != "admin" else "admin" }}
  args:
    chdir: "{{ k8s_pki_dir }}"
    creates: "{{ k8s_pki_dir }}/{{ 'kube-' + item if item != 'admin' else 'admin' }}.pem"
  loop:
    - controller-manager
    - scheduler
    - admin
    - proxy
  register: component_result
  failed_when: component_result is failed