- name: Generate Kubernetes PKI on jumpbox
  hosts: jumpbox
  become: true
  gather_facts: false
  vars:
    pki_outdir: "/root/pki"       # working dir on jumpbox
  roles:
    - pki

# - name: Distribute PKI to control planes
#   hosts: control_plane
#   become: true
#   gather_facts: false
#   vars:
#     pki_src: "/root/pki"
#     pki_dir: "/etc/kubernetes/pki"
#   tasks:
#     - name: Ensure target directories exist
#       file:
#         path: "{{ item }}"
#         state: directory
#         mode: "0755"
#       loop:
#         - "{{ pki_dir }}"
#         - /etc/etcd
#         - /var/lib/etcd

#     - name: Copy etcd peer/server cert + key for this node
#       copy:
#         src: "{{ pki_src }}/etcd-{{ inventory_hostname }}/{{ item }}"
#         dest: "/etc/etcd/{{ item }}"
#         owner: root
#         group: root
#         mode: "{{ '0600' if item.endswith('-key.pem') else '0644' }}"
#       loop:
#         - "etcd-{{ inventory_hostname }}.pem"
#         - "etcd-{{ inventory_hostname }}-key.pem"

#     - name: Copy etcd CA (shared)
#       copy:
#         src: "{{ pki_src }}/ca.pem"
#         dest: /etc/etcd/ca.pem
#         owner: root
#         group: root
#         mode: "0644"

#     - name: Copy etcd client cert for apiserver (optional but recommended)
#       copy:
#         src: "{{ pki_src }}/etcd-client{{ item.suffix }}"
#         dest: "/etc/etcd/etcd-client{{ item.suffix }}"
#         owner: root
#         group: root
#         mode: "{{ item.mode }}"
#       loop:
#         - { suffix: ".pem",      mode: "0644" }
#         - { suffix: "-key.pem",  mode: "0600" }
#       ignore_errors: yes  # if you skip generating etcd-client, this is fine

#     - name: Copy kube-apiserver serving cert + key
#       copy:
#         src: "{{ pki_src }}/kube-apiserver/{{ item }}"
#         dest: "{{ pki_dir }}/{{ item }}"
#         owner: root
#         group: root
#         mode: "{{ '0600' if item.endswith('-key.pem') else '0644' }}"
#       loop:
#         - kube-apiserver.pem
#         - kube-apiserver-key.pem

#     - name: Copy component client certs/keys
#       copy:
#         src: "{{ pki_src }}/clients/{{ item }}"
#         dest: "{{ pki_dir }}/{{ item }}"
#         owner: root
#         group: root
#         mode: "{{ '0600' if item.endswith('-key.pem') else '0644' }}"
#       loop:
#         - kube-controller-manager.pem
#         - kube-controller-manager-key.pem
#         - kube-scheduler.pem
#         - kube-scheduler-key.pem
#         - admin.pem
#         - admin-key.pem
#         - apiserver-kubelet-client.pem
#         - apiserver-kubelet-client-key.pem
#         - front-proxy-client.pem
#         - front-proxy-client-key.pem

#     - name: Copy public CAs
#       copy:
#         src: "{{ pki_src }}/{{ item.src }}"
#         dest: "{{ pki_dir }}/{{ item.dest }}"
#         owner: root
#         group: root
#         mode: "0644"
#       loop:
#         - { src: "ca.pem",               dest: "ca.crt" }
#         - { src: "front-proxy-ca.pem",   dest: "front-proxy-ca.crt" }

#     - name: Copy service account keys
#       copy:
#         src: "{{ pki_src }}/service-accounts/{{ item }}"
#         dest: "{{ pki_dir }}/{{ item }}"
#         owner: root
#         group: root
#         mode: "{{ '0600' if item.endswith('.key') else '0644' }}"
#       loop:
#         - service-accounts.key
#         - service-accounts.pub
